#####
##### The identity scope we are operating in
##### Used to add tge OpenStack user name to instance metadata
#####
data "openstack_identity_auth_scope_v3" "scope" {
  name = "{{ cluster_name }}"
}

#####
##### Security groups
#####

# Security group to hold rules for the node
resource "openstack_networking_secgroup_v2" "cluster_secgroup" {
  name                 = "{{ cluster_name }}-{{ cluster_type }}"
  delete_default_rules = true   # Fully manage with terraform
}

# Allow all egress
resource "openstack_networking_secgroup_rule_v2" "cluster_egress_v4" {
  direction         = "egress"
  ethertype         = "IPv4"
  security_group_id = "${openstack_networking_secgroup_v2.cluster_secgroup.id}"
}

{% if cluster_user_ssh_public_key is defined and cluster_user_ssh_public_key %}
# Allow ingress for SSH
resource "openstack_networking_secgroup_rule_v2" "cluster_ingress_ssh_v4" {
  direction         = "ingress"
  ethertype         = "IPv4"
  protocol          = "tcp"
  port_range_min    = 22
  port_range_max    = 22
  security_group_id = "${openstack_networking_secgroup_v2.cluster_secgroup.id}"
}
{% endif %}

#####
##### Cluster volumes
#####

resource "openstack_blockstorage_volume_v3" "zenith_volume" {
  name = "{{ cluster_name }}-{{ cluster_type }}-zenith"
  size = 1
}

resource "openstack_blockstorage_volume_v3" "data_volume" {
  name = "{{ cluster_name }}-{{ cluster_type }}-data"
  size = "{{ cluster_volume_size }}"
  {% if use_cluster_volume_type_fast is defined and use_cluster_volume_type_fast %}
  {% if cluster_volume_type_fast is defined %}
  volume_type = "{{ cluster_volume_type_fast }}"
  {% endif %}
  {% endif %}
}

#####
##### Cluster nodes
#####

resource "openstack_compute_instance_v2" "cluster_server" {
  name      = "{{ cluster_name }}-{{ cluster_type }}"
  image_id  = "{{ cluster_previous_image | default(cluster_image) }}"
  flavor_id = "{{ cluster_flavor }}"

  network {
    name = "{{ cluster_network }}"
  }

  security_groups = ["${openstack_networking_secgroup_v2.cluster_secgroup.name}"]

{% if cluster_user_ssh_public_key is defined and cluster_user_ssh_public_key %}
  user_data = <<-EOF
    #cloud-config
    ssh_authorized_keys:
      - {{ cluster_user_ssh_public_key }}
  EOF
{% endif %}
   
  metadata = {
    zenith_volume_id = "${openstack_blockstorage_volume_v3.zenith_volume.id}"
    data_volume_id = "${openstack_blockstorage_volume_v3.data_volume.id}"
    zenith_registrar_url = "{{ zenith_registrar_url }}"
    zenith_registrar_token_webconsole = "{{ zenith_token_webconsole }}"
    zenith_registrar_token_monitoring = "{{ zenith_token_monitoring }}"
    zenith_fqdn_webconsole = "{{ zenith_fqdn_webconsole }}"
    zenith_fqdn_monitoring = "{{ zenith_fqdn_monitoring }}"
    zenith_sshd_host = "{{ zenith_sshd_host }}"
    zenith_sshd_port = "{{ zenith_sshd_port }}"
    azimuth_cloud_name = "notused"
    azimuth_user_name = "${data.openstack_identity_auth_scope_v3.scope.user_name}"
    azimuth_user_id = "${data.openstack_identity_auth_scope_v3.scope.user_id}"
    azimuth_project_name = "${data.openstack_identity_auth_scope_v3.scope.project_name}"
    azimuth_project_id = "${data.openstack_identity_auth_scope_v3.scope.project_id}"
  }
}

resource "openstack_compute_volume_attach_v2" "zenith_volume" {
  instance_id = "${openstack_compute_instance_v2.cluster_server.id}"
  volume_id   = "${openstack_blockstorage_volume_v3.zenith_volume.id}"
}

resource "openstack_compute_volume_attach_v2" "data_volume" {
  instance_id = "${openstack_compute_instance_v2.cluster_server.id}"
  volume_id   = "${openstack_blockstorage_volume_v3.data_volume.id}"
}

{% if cluster_floating_ip_address is defined and cluster_floating_ip_address %}
#####
##### Floating IP association
#####

resource "openstack_compute_floatingip_associate_v2" "cluster_floatingip_assoc" {
  floating_ip = "{{ cluster_floating_ip_address }}"
  instance_id = "${openstack_compute_instance_v2.cluster_server.id}"
}
{% endif %}
